name: Terraform Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (apply/destroy)'
        required: true
        default: 'apply'

jobs:
  plan:
    name: Plan Terraform
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11.0'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Install Terraform
      run: |
        sudo apt-get update && sudo apt-get install -y unzip wget
        wget https://releases.hashicorp.com/terraform/1.3.7/terraform_1.3.7_linux_amd64.zip
        unzip terraform_1.3.7_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        terraform --version

    - name: Terraform Init
      run: terraform init
      working-directory: terraform-deploy

    - name: Terraform Plan  
      run: terraform plan -out=plan.out
      working-directory: terraform-deploy
      env:
        FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
        FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        MAILER_SENDER_API_KEY: ${{ secrets.MAILER_SENDER_API_KEY }}
        GDAL_DATA: ${{ secrets.GDAL_DATA }}
        PROJ_LIB: ${{ secrets.PROJ_LIB }}
    - name: Upload Plan
      uses: actions/upload-artifact@v2
      with:
        name: terraform-plan
        path: terraform-deploy/plan.out

  deploy:
    name: Deploy Terraform
    runs-on: ubuntu-latest
    needs: plan
    if: github.event.inputs.action == 'apply'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download Plan
      uses: actions/download-artifact@v2
      with:
        name: terraform-plan
        path: terraform-deploy

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11.0'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Install Terraform
      run: |
        sudo apt-get update && sudo apt-get install -y unzip wget
        wget https://releases.hashicorp.com/terraform/1.3.7/terraform_1.3.7_linux_amd64.zip
        unzip terraform_1.3.7_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        terraform --version

    - name: Terraform Init
      run: terraform init
      working-directory: terraform-deploy

    - name: Terraform Apply
      run: terraform apply -auto-approve terraform-deploy/plan.out
      working-directory: terraform-deploy

  destroy:
    name: Destroy Terraform
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'destroy'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11.0'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: Install Terraform
      run: |
        sudo apt-get update && sudo apt-get install -y unzip wget
        wget https://releases.hashicorp.com/terraform/1.3.7/terraform_1.3.7_linux_amd64.zip
        unzip terraform_1.3.7_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
        terraform --version

    - name: Terraform Init
      run: terraform init
      working-directory: terraform-deploy

    - name: Terraform Destroy
      run: terraform destroy -auto-approve
      working-directory: terraform-deploy
      env:
        FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
        FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
        FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
        FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
        FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
        MAILER_SENDER_API_KEY: ${{ secrets.MAILER_SENDER_API_KEY }}
        GDAL_DATA: ${{ secrets.GDAL_DATA }}
        PROJ_LIB: ${{ secrets.PROJ_LIB }}
